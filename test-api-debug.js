// –¢–µ—Å—Ç API —Å –¥–µ—Ç–∞–ª—å–Ω—ã–º –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ–º
const https = require('https');

async function testAPI() {
  console.log('üîç –¢–µ—Å—Ç–∏—Ä—É–µ–º API —Å –¥–µ—Ç–∞–ª—å–Ω—ã–º –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ–º...');
  
  const endpoints = [
    'https://pet-shop-backend-new.vercel.app/health',
    'https://pet-shop-backend-new.vercel.app/categories/all',
    'https://pet-shop-backend-new.vercel.app/products/all',
    'https://pet-shop-backend-new.vercel.app/products/1',
    'https://pet-shop-backend-new.vercel.app/sale/send',
    'https://pet-shop-backend-new.vercel.app/categories/1'
  ];
  
  for (const endpoint of endpoints) {
    try {
      console.log(`\nüì° –¢–µ—Å—Ç–∏—Ä—É–µ–º: ${endpoint}`);
      const response = await fetch(endpoint);
      console.log(`‚úÖ –°—Ç–∞—Ç—É—Å: ${response.status}`);
      
      if (response.status === 200) {
        const data = await response.json();
        console.log(`üìÑ –û—Ç–≤–µ—Ç:`, JSON.stringify(data, null, 2));
      } else {
        const errorText = await response.text();
        console.log(`‚ùå –û—à–∏–±–∫–∞:`, errorText);
      }
    } catch (error) {
      console.error(`‚ùå –û—à–∏–±–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è:`, error.message);
    }
  }
}

// –ó–∞–ø—É—Å–∫–∞–µ–º —Ç–µ—Å—Ç
testAPI();
